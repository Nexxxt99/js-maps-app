version: "3"
services:
  database:
    container_name: maps_db
    image: postgres:13.10-alpine
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
    networks:
      - maps-app

  migrations:
    build: backend
    env_file:
      - .env
    command: ["npm", "run", "sync"]
    depends_on:
      - database
    networks:
      - maps-app

  server:
    container_name: maps_server
    build: backend
    env_file:
      - .env
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    command: [ "npm", "run", "start" ]
    depends_on:
      - database
    networks:
      - maps-app

  client:
    container_name: maps_client
    build: frontend
    env_file:
      - .env
    ports:
      - "8080:80"
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      SKIP_MIGRATIONS: ${SKIP_MIGRATIONS}
    depends_on:
      - database
    networks:
      - maps-app

networks:
  maps-app:
    name: maps-network